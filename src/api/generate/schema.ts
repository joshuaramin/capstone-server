/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
    /**
     * A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
     */
    email<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "EmailAddress";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSON";
    /**
     * A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
     */
    phone<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "PhoneNumber";
    /**
     * The `Upload` scalar type represents a file upload.
     */
    Upload<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
     */
    email<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "EmailAddress";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
    /**
     * A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
     */
    phone<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "PhoneNumber";
    /**
     * The `Upload` scalar type represents a file upload.
     */
    Upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AboutInput: { // input type
    bio?: string | null; // String
  }
  CompanyInput: { // input type
    companyName?: string | null; // String
    companySize?: string | null; // String
    description?: string | null; // String
    location?: string | null; // String
  }
  EducationInput: { // input type
    degree?: string | null; // String
    endMonth?: string | null; // String
    endYear?: string | null; // String
    school?: string | null; // String
    startMonth?: string | null; // String
    startYear?: string | null; // String
    study?: string | null; // String
  }
  PaginationInput: { // input type
    page?: number | null; // Int
    take?: number | null; // Int
  }
  PortfolioInput: { // input type
    companyName?: string | null; // String
    description?: string | null; // String
    employmentType?: string | null; // String
    endMonth?: string | null; // String
    endYear?: string | null; // String
    location?: string | null; // String
    locationType?: string | null; // String
    startMonth?: string | null; // String
    startYear?: string | null; // String
    title?: string | null; // String
  }
  ProfileInput: { // input type
    birthday?: NexusGenScalars['Date'] | null; // Date
    firstname?: string | null; // String
    lastname?: string | null; // String
    phone?: string | null; // String
  }
  RequirementInput: { // input type
    type?: string | null; // String
  }
  ScheduleInput: { // input type
    description?: string | null; // String
    duration?: number | null; // Int
    endDate?: NexusGenScalars['Date'] | null; // Date
    endTime?: string | null; // String
    startDate?: NexusGenScalars['Date'] | null; // Date
    startTime?: string | null; // String
    title?: string | null; // String
  }
  SkillInput: { // input type
    skills?: string | null; // String
  }
  UserFreelanceInput: { // input type
    email?: string | null; // String
    firstname?: string | null; // String
    lastname?: string | null; // String
    password?: string | null; // String
  }
  UserInput: { // input type
    birthday?: NexusGenScalars['Date'] | null; // Date
    email?: string | null; // String
    firstname?: string | null; // String
    lastname?: string | null; // String
    password?: string | null; // String
    phone?: NexusGenScalars['PhoneNumber'] | null; // PhoneNumber
  }
  UserRecruiterInput: { // input type
    companyName?: string | null; // String
    companySize?: string | null; // String
    description?: string | null; // String
    email?: string | null; // String
    firstname?: string | null; // String
    lastname?: string | null; // String
    location?: string | null; // String
    password?: string | null; // String
    plan?: string | null; // String
  }
  jobPostInput: { // input type
    JobType?: Array<string | null> | null; // [String]
    description?: string | null; // String
    duration?: string | null; // String
    experience?: string | null; // String
    isOpen?: string | null; // String
    location?: string | null; // String
    status?: string | null; // String
    title?: string | null; // String
  }
  salaryInput: { // input type
    currency?: string | null; // String
    fixed?: number | null; // Int
    max?: number | null; // Float
    min?: number | null; // Float
  }
}

export interface NexusGenEnums {
  roleEnum: "admin" | "freelance" | "recruiter"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  EmailAddress: any
  JSON: any
  PhoneNumber: any
  Upload: any
}

export interface NexusGenObjects {
  ActivityLogsPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['activityLogs'] | null> | null; // [activityLogs]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  ApplicantPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['application'] | null> | null; // [application]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  CompaniesPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['company'] | null> | null; // [company]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  DashboardObject: { // root type
    applicants?: number | null; // Int
    company?: number | null; // Int
    freelancers?: number | null; // Int
    jobpost?: number | null; // Int
    report?: number | null; // Int
    schedule?: number | null; // Int
    userID?: string | null; // ID
    users?: number | null; // Int
  }
  EmployerDashboard: { // root type
    JobPost?: number | null; // Int
    applicants?: number | null; // Int
    companyID?: string | null; // ID
    projects?: number | null; // Int
    schedule?: number | null; // Int
    userID?: string | null; // ID
  }
  ErrorObject: { // root type
    code?: number | null; // Int
    message?: string | null; // String
  }
  FontPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['fonts'] | null> | null; // [fonts]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  GroupMessage: { // root type
    message?: NexusGenRootTypes['message'] | null; // message
    userID?: string | null; // ID
  }
  JobCount: { // root type
    applicants?: number | null; // Int
    jobPostID?: string | null; // String
  }
  JobPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  MessageStatus: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    isRead?: boolean | null; // Boolean
    messageStatusID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Mutation: {};
  NotificationPagination: { // root type
    cursor?: string | null; // String
    notification?: Array<NexusGenRootTypes['notification'] | null> | null; // [notification]
  }
  PaypalObject: { // root type
    reason?: string | null; // String
  }
  ProjectOrganizerPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  Query: {};
  ReportPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['report'] | null> | null; // [report]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  ReviewPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['review'] | null> | null; // [review]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  SchedulePagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['schedule'] | null> | null; // [schedule]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  SkillsPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  ThemePagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['theme'] | null> | null; // [theme]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  UnReadNotification: { // root type
    unreadNotification?: number | null; // Int
  }
  UserPagination: { // root type
    currentPage?: number | null; // Int
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    item?: Array<NexusGenRootTypes['user'] | null> | null; // [user]
    totalItems?: number | null; // Int
    totalPages?: number | null; // Int
  }
  about: { // root type
    aboutID?: string | null; // ID
    bio?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  activityLogs: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    logsID?: string | null; // ID
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  application: { // root type
    applicationID?: string | null; // ID
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    status?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  ats: { // root type
    applicationID?: string | null; // ID
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    score?: number | null; // Float
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  company: { // root type
    companyID?: string | null; // ID
    companyName?: string | null; // String
    companySize?: string | null; // String
    description?: string | null; // String
    location?: string | null; // String
    slug?: string | null; // String
    verified?: boolean | null; // Boolean
  }
  education: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    degree?: string | null; // String
    educationID?: string | null; // ID
    endMonth?: string | null; // String
    endYear?: string | null; // String
    school?: string | null; // String
    startMonth?: string | null; // String
    startYear?: string | null; // String
    study?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  favourite: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    favouriteID?: string | null; // ID
  }
  fonts: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    font?: string | null; // String
    fontID?: string | null; // ID
    image?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  jobpost: { // root type
    JobType?: Array<string | null> | null; // [String]
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    duration?: string | null; // String
    endDate?: NexusGenScalars['Date'] | null; // Date
    experience?: string | null; // String
    isArchive?: boolean | null; // Boolean
    isOpen?: string | null; // String
    jobPostID?: string | null; // ID
    location?: string | null; // String
    slug?: string | null; // String
    status?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  media: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    media?: string | null; // String
    mediaID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  message: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    message?: string | null; // String
    messageID?: string | null; // ID
    receiverID?: string | null; // String
    senderID?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  notification: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    notificationID?: string | null; // ID
    read?: boolean | null; // Boolean
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  password: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    password?: string | null; // String
    passwordID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  portfolio: { // root type
    companyName?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    employmentType?: string | null; // String
    endMonth?: string | null; // String
    endYear?: string | null; // String
    location?: string | null; // String
    locationType?: string | null; // String
    portfolioID?: string | null; // ID
    startMonth?: string | null; // String
    startYear?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  profile: { // root type
    birthday?: NexusGenScalars['Date'] | null; // Date
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    firstname?: string | null; // String
    lastname?: string | null; // String
    phone?: NexusGenScalars['PhoneNumber'] | null; // PhoneNumber
    profileID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  project: { // root type
    amount?: number | null; // Float
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    projectOrganizerID?: string | null; // ID
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    status?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  report: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    message?: string | null; // String
    reportID?: string | null; // ID
  }
  requirement: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    requirement?: string | null; // String
    requirementsID?: string | null; // ID
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  resetPassword: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    expiredAt?: NexusGenScalars['DateTime'] | null; // DateTime
    reset?: string | null; // String
    resetPassID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  resume: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    resume?: string | null; // String
    resumeID?: string | null; // ID
    title?: string | null; // String
    updatedaAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  review: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    rating?: number | null; // Int
    review?: string | null; // String
    reviewID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  salary: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    currency?: string | null; // String
    fixed?: number | null; // Float
    max?: number | null; // Float
    min?: number | null; // Float
    salaryID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  schedule: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    endDate?: NexusGenScalars['DateTime'] | null; // DateTime
    endTime?: string | null; // String
    link?: string | null; // String
    scheduleID?: string | null; // ID
    startDate?: NexusGenScalars['DateTime'] | null; // DateTime
    startTime?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  skills: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    skills?: string | null; // String
    skillsID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  skillsGroup: { // root type
    count?: number | null; // Int
    skills?: string | null; // String
  }
  social: { // root type
    Github?: string | null; // String
    Web?: string | null; // String
    X?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    facebook?: string | null; // String
    instagram?: string | null; // String
    socialID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  theme: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    image?: string | null; // String
    theme?: string | null; // String
    themeID?: string | null; // ID
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  token: { // root type
    role?: string | null; // String
    token?: string | null; // String
    userID?: string | null; // ID
  }
  user: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    password?: string | null; // String
    plan?: string | null; // String
    role?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userID?: string | null; // ID
    verified?: boolean | null; // Boolean
  }
  zintegration: { // root type
    accountID?: string | null; // String
    clientID?: string | null; // String
    integrationID?: string | null; // ID
    secretID?: string | null; // String
  }
  zoom: { // root type
    access_token?: string | null; // String
    api_url?: string | null; // String
    expires_in?: number | null; // Int
    scope?: string | null; // String
    token_type?: string | null; // String
  }
  zoom_meeting: { // root type
    created_at?: string | null; // String
    duration?: number | null; // Int
    encrypted_password?: string | null; // String
    h323_password?: string | null; // String
    host_id?: string | null; // String
    id?: number | null; // Int
    join_url?: string | null; // String
    password?: string | null; // String
    pstn_password?: string | null; // String
    start_time?: string | null; // String
    start_url?: string | null; // String
    status?: string | null; // String
    timezone?: string | null; // String
    topic?: string | null; // String
    type?: string | null; // String
    uuid?: string | null; // String
  }
}

export interface NexusGenInterfaces {
  Error: NexusGenRootTypes['ErrorObject'];
}

export interface NexusGenUnions {
  AboutPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['about'];
  ApplicationPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['application'];
  CredentialsPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['token'];
  EducationPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['education'];
  EmailPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['user'];
  FavouritePayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['favourite'];
  JobPostPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['jobpost'];
  MediaPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['media'];
  PortfolioPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['portfolio'];
  ResumePayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['resume'];
  SchedulePayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['schedule'];
  SkillPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['skills'];
  SocialPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['social'];
  UserPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['user'];
  resetPasswordPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['resetPassword'];
  salaryPayload: NexusGenRootTypes['ErrorObject'] | NexusGenRootTypes['salary'];
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  ActivityLogsPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['activityLogs'] | null> | null; // [activityLogs]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  ApplicantPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['application'] | null> | null; // [application]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  CompaniesPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['company'] | null> | null; // [company]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  DashboardObject: { // field return type
    applicants: number | null; // Int
    company: number | null; // Int
    freelancers: number | null; // Int
    jobpost: number | null; // Int
    jobpostList: Array<NexusGenRootTypes['JobCount'] | null> | null; // [JobCount]
    report: number | null; // Int
    schedule: number | null; // Int
    userID: string | null; // ID
    users: number | null; // Int
  }
  EmployerDashboard: { // field return type
    JobPost: number | null; // Int
    applicants: number | null; // Int
    companyID: string | null; // ID
    getMyJobPost: Array<NexusGenRootTypes['JobCount'] | null> | null; // [JobCount]
    getScheduleList: Array<NexusGenRootTypes['schedule'] | null> | null; // [schedule]
    projects: number | null; // Int
    schedule: number | null; // Int
    userID: string | null; // ID
  }
  ErrorObject: { // field return type
    code: number | null; // Int
    message: string | null; // String
  }
  FontPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['fonts'] | null> | null; // [fonts]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  GroupMessage: { // field return type
    message: NexusGenRootTypes['message'] | null; // message
    user: NexusGenRootTypes['user'] | null; // user
    userID: string | null; // ID
  }
  JobCount: { // field return type
    applicants: number | null; // Int
    jobPostID: string | null; // String
    jobTitle: NexusGenRootTypes['jobpost'] | null; // jobpost
  }
  JobPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  MessageStatus: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    isRead: boolean | null; // Boolean
    messageStatusID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Mutation: { // field return type
    ChangeEmailAddress: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    Logout: NexusGenRootTypes['activityLogs'] | null; // activityLogs
    addProfileAvatar: NexusGenRootTypes['profile'] | null; // profile
    addProfileHeader: NexusGenRootTypes['profile'] | null; // profile
    addProfileThemnFonts: NexusGenRootTypes['profile'] | null; // profile
    addSkillToProfile: NexusGenRootTypes['profile'] | null; // profile
    addSkills: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    archiveJobPost: NexusGenRootTypes['jobpost'] | null; // jobpost
    archiveNotification: NexusGenRootTypes['notification'] | null; // notification
    cancelSubscription: NexusGenRootTypes['PaypalObject'] | null; // PaypalObject
    checkMyEmailAddress: NexusGenRootTypes['EmailPayload'] | null; // EmailPayload
    companyUploadDocuments: NexusGenRootTypes['requirement'] | null; // requirement
    createAbout: NexusGenRootTypes['AboutPayload'] | null; // AboutPayload
    createApplication: NexusGenRootTypes['ApplicationPayload'] | null; // ApplicationPayload
    createAvatar: NexusGenRootTypes['MediaPayload'] | null; // MediaPayload
    createCompanyReview: NexusGenRootTypes['review'] | null; // review
    createEducationBackground: NexusGenRootTypes['EducationPayload'] | null; // EducationPayload
    createFavourite: NexusGenRootTypes['FavouritePayload'] | null; // FavouritePayload
    createFontFamily: NexusGenRootTypes['fonts'] | null; // fonts
    createJobPost: NexusGenRootTypes['JobPostPayload'] | null; // JobPostPayload
    createMessage: NexusGenRootTypes['message'] | null; // message
    createPortfolio: NexusGenRootTypes['PortfolioPayload'] | null; // PortfolioPayload
    createReportJobPost: NexusGenRootTypes['report'] | null; // report
    createResume: NexusGenRootTypes['ResumePayload'] | null; // ResumePayload
    createSchedule: NexusGenRootTypes['SchedulePayload'] | null; // SchedulePayload
    createSkills: NexusGenRootTypes['SkillPayload'] | null; // SkillPayload
    createSocialLink: NexusGenRootTypes['social'] | null; // social
    createTheme: NexusGenRootTypes['theme'] | null; // theme
    createUserAdminAccount: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    createUserFreelancers: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    createUserRecruiter: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    createUserReview: NexusGenRootTypes['review'] | null; // review
    createZoomIntegration: NexusGenRootTypes['zintegration'] | null; // zintegration
    deactivateMyAccount: NexusGenRootTypes['user'] | null; // user
    deleteAbout: NexusGenRootTypes['about'] | null; // about
    deleteEducationBackground: NexusGenRootTypes['education'] | null; // education
    deleteFavourite: NexusGenRootTypes['favourite'] | null; // favourite
    deleteFontFamily: NexusGenRootTypes['fonts'] | null; // fonts
    deleteJobPost: NexusGenRootTypes['jobpost'] | null; // jobpost
    deleteMessage: NexusGenRootTypes['message'] | null; // message
    deletePortfolio: NexusGenRootTypes['portfolio'] | null; // portfolio
    deleteProfileAvatar: NexusGenRootTypes['profile'] | null; // profile
    deleteProfileHeader: NexusGenRootTypes['profile'] | null; // profile
    deleteResume: NexusGenRootTypes['resume'] | null; // resume
    deleteSchedule: NexusGenRootTypes['schedule'] | null; // schedule
    deleteSkills: NexusGenRootTypes['skills'] | null; // skills
    deleteTheme: NexusGenRootTypes['theme'] | null; // theme
    deleteUserAccount: NexusGenRootTypes['user'] | null; // user
    findMyEmailAddress: NexusGenRootTypes['EmailPayload'] | null; // EmailPayload
    generateApplicantByJobPostID: Array<NexusGenRootTypes['application'] | null> | null; // [application]
    generateJobPostApplicant: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    generateProjectOrganizer: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    getMyResetPasswordLink: NexusGenRootTypes['resetPasswordPayload'] | null; // resetPasswordPayload
    login: NexusGenRootTypes['CredentialsPayload'] | null; // CredentialsPayload
    markallNotificationAsRead: NexusGenRootTypes['notification'] | null; // notification
    removedSkillToProfile: NexusGenRootTypes['profile'] | null; // profile
    updateAbout: NexusGenRootTypes['about'] | null; // about
    updateApplicationStatus: NexusGenRootTypes['application'] | null; // application
    updateCompany: NexusGenRootTypes['company'] | null; // company
    updateCompanyLogo: NexusGenRootTypes['company'] | null; // company
    updateEducationBackground: NexusGenRootTypes['education'] | null; // education
    updateFontFamily: NexusGenRootTypes['fonts'] | null; // fonts
    updateJobPost: NexusGenRootTypes['jobpost'] | null; // jobpost
    updateJobSettings: NexusGenRootTypes['jobpost'] | null; // jobpost
    updateMessageStatus: NexusGenRootTypes['message'] | null; // message
    updateNotification: NexusGenRootTypes['notification'] | null; // notification
    updatePortfolio: NexusGenRootTypes['portfolio'] | null; // portfolio
    updateProfile: NexusGenRootTypes['profile'] | null; // profile
    updateProjectDetails: NexusGenRootTypes['project'] | null; // project
    updateProjectStatus: NexusGenRootTypes['project'] | null; // project
    updateSchedule: NexusGenRootTypes['schedule'] | null; // schedule
    updateSkills: NexusGenRootTypes['skills'] | null; // skills
    updateSocialLink: NexusGenRootTypes['social'] | null; // social
    updateTheme: NexusGenRootTypes['theme'] | null; // theme
    updateUserPasswordAccount: NexusGenRootTypes['UserPayload'] | null; // UserPayload
    updateUserProfile: NexusGenRootTypes['user'] | null; // user
    updateZoomIntegration: NexusGenRootTypes['zintegration'] | null; // zintegration
    upgradeSubscription: NexusGenRootTypes['user'] | null; // user
    verifyMyAccount: NexusGenRootTypes['user'] | null; // user
    zoom_access: NexusGenRootTypes['zoom'] | null; // zoom
  }
  NotificationPagination: { // field return type
    cursor: string | null; // String
    notification: Array<NexusGenRootTypes['notification'] | null> | null; // [notification]
  }
  PaypalObject: { // field return type
    reason: string | null; // String
  }
  ProjectOrganizerPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  Query: { // field return type
    getAboutById: NexusGenRootTypes['about'] | null; // about
    getAboutByProfileID: NexusGenRootTypes['about'] | null; // about
    getAllCompanies: NexusGenRootTypes['CompaniesPagination'] | null; // CompaniesPagination
    getAllCompanyReview: NexusGenRootTypes['ReviewPagination'] | null; // ReviewPagination
    getAllEducationByProfileId: Array<NexusGenRootTypes['education'] | null> | null; // [education]
    getAllFonts: NexusGenRootTypes['FontPagination'] | null; // FontPagination
    getAllJobPost: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    getAllJobPostReport: NexusGenRootTypes['ReportPagination'] | null; // ReportPagination
    getAllMySaveJobs: Array<NexusGenRootTypes['favourite'] | null> | null; // [favourite]
    getAllMySocialLink: NexusGenRootTypes['social'] | null; // social
    getAllResumyByProfileID: Array<NexusGenRootTypes['resume'] | null> | null; // [resume]
    getAllUserAccountByRole: NexusGenRootTypes['UserPagination'] | null; // UserPagination
    getApplicantJobPostByIdPagination: NexusGenRootTypes['ApplicantPagination'] | null; // ApplicantPagination
    getApplicationByID: NexusGenRootTypes['application'] | null; // application
    getCompanyByID: NexusGenRootTypes['company'] | null; // company
    getCompanyProjects: NexusGenRootTypes['ProjectOrganizerPagination'] | null; // ProjectOrganizerPagination
    getCompanySlug: NexusGenRootTypes['company'] | null; // company
    getDashboardQuery: NexusGenRootTypes['DashboardObject'] | null; // DashboardObject
    getEducationById: NexusGenRootTypes['education'] | null; // education
    getEmployerDashboardQuery: NexusGenRootTypes['EmployerDashboard'] | null; // EmployerDashboard
    getJobBoard: NexusGenRootTypes['JobPagination'] | null; // JobPagination
    getJobPostById: NexusGenRootTypes['jobpost'] | null; // jobpost
    getMessages: Array<NexusGenRootTypes['GroupMessage'] | null> | null; // [GroupMessage]
    getMyApplication: NexusGenRootTypes['ApplicantPagination'] | null; // ApplicantPagination
    getMyCompanyByUserID: NexusGenRootTypes['company'] | null; // company
    getMyFavouriteJobPost: NexusGenRootTypes['favourite'] | null; // favourite
    getMyZoomIntegration: NexusGenRootTypes['zintegration'] | null; // zintegration
    getNotificationByID: NexusGenRootTypes['notification'] | null; // notification
    getNotificationByUserID: NexusGenRootTypes['NotificationPagination'] | null; // NotificationPagination
    getPersonalMessage: Array<NexusGenRootTypes['message'] | null> | null; // [message]
    getPortfolioByProfileID: Array<NexusGenRootTypes['portfolio'] | null> | null; // [portfolio]
    getProfileByUser: NexusGenRootTypes['profile'] | null; // profile
    getProjectOrganizedID: NexusGenRootTypes['project'] | null; // project
    getReceiverByDate: Array<NexusGenRootTypes['schedule'] | null> | null; // [schedule]
    getReportById: NexusGenRootTypes['report'] | null; // report
    getReviewById: NexusGenRootTypes['review'] | null; // review
    getScheduleByDate: Array<NexusGenRootTypes['schedule'] | null> | null; // [schedule]
    getScheduleById: NexusGenRootTypes['schedule'] | null; // schedule
    getSimilarJobPost: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    getSkillByProfileID: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    getThemes: NexusGenRootTypes['ThemePagination'] | null; // ThemePagination
    getUnreadCountMessage: number | null; // Int
    getUserAccountById: NexusGenRootTypes['user'] | null; // user
    getUserActivityLogs: NexusGenRootTypes['ActivityLogsPagination'] | null; // ActivityLogsPagination
    getUserProfileById: NexusGenRootTypes['profile'] | null; // profile
    getUserProjectOrganizer: NexusGenRootTypes['ProjectOrganizerPagination'] | null; // ProjectOrganizerPagination
    jobPagination: NexusGenRootTypes['JobPagination'] | null; // JobPagination
    skillsPagination: NexusGenRootTypes['SkillsPagination'] | null; // SkillsPagination
    unreadNotification: number | null; // Int
  }
  ReportPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['report'] | null> | null; // [report]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  ReviewPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['review'] | null> | null; // [review]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  SchedulePagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['schedule'] | null> | null; // [schedule]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  SkillsPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  ThemePagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['theme'] | null> | null; // [theme]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  UnReadNotification: { // field return type
    unreadNotification: number | null; // Int
  }
  UserPagination: { // field return type
    currentPage: number | null; // Int
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    item: Array<NexusGenRootTypes['user'] | null> | null; // [user]
    totalItems: number | null; // Int
    totalPages: number | null; // Int
  }
  about: { // field return type
    aboutID: string | null; // ID
    bio: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  activityLogs: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    logsID: string | null; // ID
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  application: { // field return type
    applicationID: string | null; // ID
    company: NexusGenRootTypes['company'] | null; // company
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    jobPost: NexusGenRootTypes['jobpost'] | null; // jobpost
    resume: NexusGenRootTypes['resume'] | null; // resume
    score: NexusGenRootTypes['ats'] | null; // ats
    status: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['user'] | null; // user
  }
  ats: { // field return type
    applicationID: string | null; // ID
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    score: number | null; // Float
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  company: { // field return type
    companyID: string | null; // ID
    companyName: string | null; // String
    companyProject: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    companySize: string | null; // String
    description: string | null; // String
    getJobPostCount: number | null; // Int
    jobPost: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    location: string | null; // String
    logo: NexusGenRootTypes['media'] | null; // media
    requirements: Array<NexusGenRootTypes['requirement'] | null> | null; // [requirement]
    slug: string | null; // String
    user: NexusGenRootTypes['user'] | null; // user
    verified: boolean | null; // Boolean
  }
  education: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    degree: string | null; // String
    educationID: string | null; // ID
    endMonth: string | null; // String
    endYear: string | null; // String
    school: string | null; // String
    startMonth: string | null; // String
    startYear: string | null; // String
    study: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  favourite: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    favouriteID: string | null; // ID
    jobPost: NexusGenRootTypes['jobpost'] | null; // jobpost
    user: NexusGenRootTypes['user'] | null; // user
  }
  fonts: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    font: string | null; // String
    fontID: string | null; // ID
    image: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  jobpost: { // field return type
    JobType: Array<string | null> | null; // [String]
    applicants: Array<NexusGenRootTypes['application'] | null> | null; // [application]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    duration: string | null; // String
    endDate: NexusGenScalars['Date'] | null; // Date
    experience: string | null; // String
    getCompany: NexusGenRootTypes['company'] | null; // company
    isArchive: boolean | null; // Boolean
    isOpen: string | null; // String
    jobPostID: string | null; // ID
    location: string | null; // String
    salary: NexusGenRootTypes['salary'] | null; // salary
    skills: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    slug: string | null; // String
    status: string | null; // String
    title: string | null; // String
    totalApplicant: number | null; // Int
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  media: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    media: string | null; // String
    mediaID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  message: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    media: NexusGenRootTypes['media'] | null; // media
    message: string | null; // String
    messageID: string | null; // ID
    messageStatus: NexusGenRootTypes['MessageStatus'] | null; // MessageStatus
    receivedUser: NexusGenRootTypes['user'] | null; // user
    receiverID: string | null; // String
    sendUser: NexusGenRootTypes['user'] | null; // user
    senderID: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  notification: { // field return type
    application: NexusGenRootTypes['application'] | null; // application
    company: Array<NexusGenRootTypes['company'] | null> | null; // [company]
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    notificationID: string | null; // ID
    project: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    read: boolean | null; // Boolean
    schedule: NexusGenRootTypes['schedule'] | null; // schedule
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  password: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    password: string | null; // String
    passwordID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  portfolio: { // field return type
    companyName: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    employmentType: string | null; // String
    endMonth: string | null; // String
    endYear: string | null; // String
    location: string | null; // String
    locationType: string | null; // String
    media: Array<NexusGenRootTypes['media'] | null> | null; // [media]
    portfolioID: string | null; // ID
    skills: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    startMonth: string | null; // String
    startYear: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  profile: { // field return type
    about: NexusGenRootTypes['about'] | null; // about
    avatar: NexusGenRootTypes['media'] | null; // media
    birthday: NexusGenScalars['Date'] | null; // Date
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    education: Array<NexusGenRootTypes['education'] | null> | null; // [education]
    firstname: string | null; // String
    getMyFont: NexusGenRootTypes['fonts'] | null; // fonts
    getMyResume: Array<NexusGenRootTypes['resume'] | null> | null; // [resume]
    getMyTheme: NexusGenRootTypes['theme'] | null; // theme
    header: NexusGenRootTypes['media'] | null; // media
    lastname: string | null; // String
    phone: NexusGenScalars['PhoneNumber'] | null; // PhoneNumber
    portfolio: Array<NexusGenRootTypes['portfolio'] | null> | null; // [portfolio]
    profileID: string | null; // ID
    review: Array<NexusGenRootTypes['review'] | null> | null; // [review]
    skills: Array<NexusGenRootTypes['skills'] | null> | null; // [skills]
    social: NexusGenRootTypes['social'] | null; // social
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['user'] | null; // user
  }
  project: { // field return type
    amount: number | null; // Float
    company: NexusGenRootTypes['company'] | null; // company
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    projectOrganizerID: string | null; // ID
    startDate: NexusGenScalars['DateTime'] | null; // DateTime
    status: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['user'] | null; // user
  }
  report: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    jobPost: Array<NexusGenRootTypes['jobpost'] | null> | null; // [jobpost]
    message: string | null; // String
    reportID: string | null; // ID
    user: NexusGenRootTypes['user'] | null; // user
  }
  requirement: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    requirement: string | null; // String
    requirementsID: string | null; // ID
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  resetPassword: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    expiredAt: NexusGenScalars['DateTime'] | null; // DateTime
    reset: string | null; // String
    resetPassID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  resume: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    resume: string | null; // String
    resumeID: string | null; // ID
    title: string | null; // String
    updatedaAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  review: { // field return type
    User: NexusGenRootTypes['user'] | null; // user
    company: NexusGenRootTypes['company'] | null; // company
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    rating: number | null; // Int
    review: string | null; // String
    reviewID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  salary: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    currency: string | null; // String
    fixed: number | null; // Float
    max: number | null; // Float
    min: number | null; // Float
    salaryID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  schedule: { // field return type
    applicant: NexusGenRootTypes['user'] | null; // user
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    endTime: string | null; // String
    link: string | null; // String
    scheduleID: string | null; // ID
    startDate: NexusGenScalars['DateTime'] | null; // DateTime
    startTime: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  skills: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    jobCount: number | null; // Int
    skills: string | null; // String
    skillsID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  skillsGroup: { // field return type
    count: number | null; // Int
    skills: string | null; // String
  }
  social: { // field return type
    Github: string | null; // String
    Web: string | null; // String
    X: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    facebook: string | null; // String
    instagram: string | null; // String
    socialID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  theme: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    image: string | null; // String
    theme: string | null; // String
    themeID: string | null; // ID
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  token: { // field return type
    role: string | null; // String
    token: string | null; // String
    user: NexusGenRootTypes['user'] | null; // user
    userID: string | null; // ID
  }
  user: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    getMyApplication: Array<NexusGenRootTypes['application'] | null> | null; // [application]
    getMyCompany: NexusGenRootTypes['company'] | null; // company
    getMyLogs: Array<NexusGenRootTypes['activityLogs'] | null> | null; // [activityLogs]
    getMyNotification: Array<NexusGenRootTypes['notification'] | null> | null; // [notification]
    messages: Array<NexusGenRootTypes['message'] | null> | null; // [message]
    myProfile: NexusGenRootTypes['profile'] | null; // profile
    password: string | null; // String
    passwordHash: Array<NexusGenRootTypes['password'] | null> | null; // [password]
    plan: string | null; // String
    projectOrganizer: Array<NexusGenRootTypes['project'] | null> | null; // [project]
    receiverList: Array<NexusGenRootTypes['message'] | null> | null; // [message]
    requirement: Array<NexusGenRootTypes['requirement'] | null> | null; // [requirement]
    review: Array<NexusGenRootTypes['review'] | null> | null; // [review]
    role: string | null; // String
    senderList: Array<NexusGenRootTypes['message'] | null> | null; // [message]
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userID: string | null; // ID
    verified: boolean | null; // Boolean
  }
  zintegration: { // field return type
    accountID: string | null; // String
    clientID: string | null; // String
    integrationID: string | null; // ID
    secretID: string | null; // String
  }
  zoom: { // field return type
    access_token: string | null; // String
    api_url: string | null; // String
    expires_in: number | null; // Int
    scope: string | null; // String
    token_type: string | null; // String
  }
  zoom_meeting: { // field return type
    created_at: string | null; // String
    duration: number | null; // Int
    encrypted_password: string | null; // String
    h323_password: string | null; // String
    host_id: string | null; // String
    id: number | null; // Int
    join_url: string | null; // String
    password: string | null; // String
    pstn_password: string | null; // String
    start_time: string | null; // String
    start_url: string | null; // String
    status: string | null; // String
    timezone: string | null; // String
    topic: string | null; // String
    type: string | null; // String
    uuid: string | null; // String
  }
  Error: { // field return type
    code: number | null; // Int
    message: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  ActivityLogsPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'activityLogs'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  ApplicantPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'application'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  CompaniesPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'company'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  DashboardObject: { // field return type name
    applicants: 'Int'
    company: 'Int'
    freelancers: 'Int'
    jobpost: 'Int'
    jobpostList: 'JobCount'
    report: 'Int'
    schedule: 'Int'
    userID: 'ID'
    users: 'Int'
  }
  EmployerDashboard: { // field return type name
    JobPost: 'Int'
    applicants: 'Int'
    companyID: 'ID'
    getMyJobPost: 'JobCount'
    getScheduleList: 'schedule'
    projects: 'Int'
    schedule: 'Int'
    userID: 'ID'
  }
  ErrorObject: { // field return type name
    code: 'Int'
    message: 'String'
  }
  FontPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'fonts'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  GroupMessage: { // field return type name
    message: 'message'
    user: 'user'
    userID: 'ID'
  }
  JobCount: { // field return type name
    applicants: 'Int'
    jobPostID: 'String'
    jobTitle: 'jobpost'
  }
  JobPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'jobpost'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  MessageStatus: { // field return type name
    createdAt: 'DateTime'
    isRead: 'Boolean'
    messageStatusID: 'ID'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    ChangeEmailAddress: 'UserPayload'
    Logout: 'activityLogs'
    addProfileAvatar: 'profile'
    addProfileHeader: 'profile'
    addProfileThemnFonts: 'profile'
    addSkillToProfile: 'profile'
    addSkills: 'skills'
    archiveJobPost: 'jobpost'
    archiveNotification: 'notification'
    cancelSubscription: 'PaypalObject'
    checkMyEmailAddress: 'EmailPayload'
    companyUploadDocuments: 'requirement'
    createAbout: 'AboutPayload'
    createApplication: 'ApplicationPayload'
    createAvatar: 'MediaPayload'
    createCompanyReview: 'review'
    createEducationBackground: 'EducationPayload'
    createFavourite: 'FavouritePayload'
    createFontFamily: 'fonts'
    createJobPost: 'JobPostPayload'
    createMessage: 'message'
    createPortfolio: 'PortfolioPayload'
    createReportJobPost: 'report'
    createResume: 'ResumePayload'
    createSchedule: 'SchedulePayload'
    createSkills: 'SkillPayload'
    createSocialLink: 'social'
    createTheme: 'theme'
    createUserAdminAccount: 'UserPayload'
    createUserFreelancers: 'UserPayload'
    createUserRecruiter: 'UserPayload'
    createUserReview: 'review'
    createZoomIntegration: 'zintegration'
    deactivateMyAccount: 'user'
    deleteAbout: 'about'
    deleteEducationBackground: 'education'
    deleteFavourite: 'favourite'
    deleteFontFamily: 'fonts'
    deleteJobPost: 'jobpost'
    deleteMessage: 'message'
    deletePortfolio: 'portfolio'
    deleteProfileAvatar: 'profile'
    deleteProfileHeader: 'profile'
    deleteResume: 'resume'
    deleteSchedule: 'schedule'
    deleteSkills: 'skills'
    deleteTheme: 'theme'
    deleteUserAccount: 'user'
    findMyEmailAddress: 'EmailPayload'
    generateApplicantByJobPostID: 'application'
    generateJobPostApplicant: 'jobpost'
    generateProjectOrganizer: 'project'
    getMyResetPasswordLink: 'resetPasswordPayload'
    login: 'CredentialsPayload'
    markallNotificationAsRead: 'notification'
    removedSkillToProfile: 'profile'
    updateAbout: 'about'
    updateApplicationStatus: 'application'
    updateCompany: 'company'
    updateCompanyLogo: 'company'
    updateEducationBackground: 'education'
    updateFontFamily: 'fonts'
    updateJobPost: 'jobpost'
    updateJobSettings: 'jobpost'
    updateMessageStatus: 'message'
    updateNotification: 'notification'
    updatePortfolio: 'portfolio'
    updateProfile: 'profile'
    updateProjectDetails: 'project'
    updateProjectStatus: 'project'
    updateSchedule: 'schedule'
    updateSkills: 'skills'
    updateSocialLink: 'social'
    updateTheme: 'theme'
    updateUserPasswordAccount: 'UserPayload'
    updateUserProfile: 'user'
    updateZoomIntegration: 'zintegration'
    upgradeSubscription: 'user'
    verifyMyAccount: 'user'
    zoom_access: 'zoom'
  }
  NotificationPagination: { // field return type name
    cursor: 'String'
    notification: 'notification'
  }
  PaypalObject: { // field return type name
    reason: 'String'
  }
  ProjectOrganizerPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'project'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  Query: { // field return type name
    getAboutById: 'about'
    getAboutByProfileID: 'about'
    getAllCompanies: 'CompaniesPagination'
    getAllCompanyReview: 'ReviewPagination'
    getAllEducationByProfileId: 'education'
    getAllFonts: 'FontPagination'
    getAllJobPost: 'jobpost'
    getAllJobPostReport: 'ReportPagination'
    getAllMySaveJobs: 'favourite'
    getAllMySocialLink: 'social'
    getAllResumyByProfileID: 'resume'
    getAllUserAccountByRole: 'UserPagination'
    getApplicantJobPostByIdPagination: 'ApplicantPagination'
    getApplicationByID: 'application'
    getCompanyByID: 'company'
    getCompanyProjects: 'ProjectOrganizerPagination'
    getCompanySlug: 'company'
    getDashboardQuery: 'DashboardObject'
    getEducationById: 'education'
    getEmployerDashboardQuery: 'EmployerDashboard'
    getJobBoard: 'JobPagination'
    getJobPostById: 'jobpost'
    getMessages: 'GroupMessage'
    getMyApplication: 'ApplicantPagination'
    getMyCompanyByUserID: 'company'
    getMyFavouriteJobPost: 'favourite'
    getMyZoomIntegration: 'zintegration'
    getNotificationByID: 'notification'
    getNotificationByUserID: 'NotificationPagination'
    getPersonalMessage: 'message'
    getPortfolioByProfileID: 'portfolio'
    getProfileByUser: 'profile'
    getProjectOrganizedID: 'project'
    getReceiverByDate: 'schedule'
    getReportById: 'report'
    getReviewById: 'review'
    getScheduleByDate: 'schedule'
    getScheduleById: 'schedule'
    getSimilarJobPost: 'jobpost'
    getSkillByProfileID: 'skills'
    getThemes: 'ThemePagination'
    getUnreadCountMessage: 'Int'
    getUserAccountById: 'user'
    getUserActivityLogs: 'ActivityLogsPagination'
    getUserProfileById: 'profile'
    getUserProjectOrganizer: 'ProjectOrganizerPagination'
    jobPagination: 'JobPagination'
    skillsPagination: 'SkillsPagination'
    unreadNotification: 'Int'
  }
  ReportPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'report'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  ReviewPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'review'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  SchedulePagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'schedule'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  SkillsPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'skills'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  ThemePagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'theme'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  UnReadNotification: { // field return type name
    unreadNotification: 'Int'
  }
  UserPagination: { // field return type name
    currentPage: 'Int'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    item: 'user'
    totalItems: 'Int'
    totalPages: 'Int'
  }
  about: { // field return type name
    aboutID: 'ID'
    bio: 'String'
    createdAt: 'DateTime'
    updatedAt: 'DateTime'
  }
  activityLogs: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    logsID: 'ID'
    title: 'String'
    updatedAt: 'DateTime'
  }
  application: { // field return type name
    applicationID: 'ID'
    company: 'company'
    createdAt: 'DateTime'
    id: 'String'
    jobPost: 'jobpost'
    resume: 'resume'
    score: 'ats'
    status: 'String'
    updatedAt: 'DateTime'
    user: 'user'
  }
  ats: { // field return type name
    applicationID: 'ID'
    createdAt: 'DateTime'
    score: 'Float'
    updatedAt: 'DateTime'
  }
  company: { // field return type name
    companyID: 'ID'
    companyName: 'String'
    companyProject: 'project'
    companySize: 'String'
    description: 'String'
    getJobPostCount: 'Int'
    jobPost: 'jobpost'
    location: 'String'
    logo: 'media'
    requirements: 'requirement'
    slug: 'String'
    user: 'user'
    verified: 'Boolean'
  }
  education: { // field return type name
    createdAt: 'DateTime'
    degree: 'String'
    educationID: 'ID'
    endMonth: 'String'
    endYear: 'String'
    school: 'String'
    startMonth: 'String'
    startYear: 'String'
    study: 'String'
    updatedAt: 'DateTime'
  }
  favourite: { // field return type name
    createdAt: 'DateTime'
    favouriteID: 'ID'
    jobPost: 'jobpost'
    user: 'user'
  }
  fonts: { // field return type name
    createdAt: 'DateTime'
    font: 'String'
    fontID: 'ID'
    image: 'String'
    updatedAt: 'DateTime'
  }
  jobpost: { // field return type name
    JobType: 'String'
    applicants: 'application'
    createdAt: 'DateTime'
    description: 'String'
    duration: 'String'
    endDate: 'Date'
    experience: 'String'
    getCompany: 'company'
    isArchive: 'Boolean'
    isOpen: 'String'
    jobPostID: 'ID'
    location: 'String'
    salary: 'salary'
    skills: 'skills'
    slug: 'String'
    status: 'String'
    title: 'String'
    totalApplicant: 'Int'
    updatedAt: 'DateTime'
  }
  media: { // field return type name
    createdAt: 'DateTime'
    media: 'String'
    mediaID: 'ID'
    updatedAt: 'DateTime'
  }
  message: { // field return type name
    createdAt: 'DateTime'
    media: 'media'
    message: 'String'
    messageID: 'ID'
    messageStatus: 'MessageStatus'
    receivedUser: 'user'
    receiverID: 'String'
    sendUser: 'user'
    senderID: 'String'
    updatedAt: 'DateTime'
  }
  notification: { // field return type name
    application: 'application'
    company: 'company'
    createdAt: 'DateTime'
    notificationID: 'ID'
    project: 'project'
    read: 'Boolean'
    schedule: 'schedule'
    title: 'String'
    updatedAt: 'DateTime'
  }
  password: { // field return type name
    createdAt: 'DateTime'
    password: 'String'
    passwordID: 'ID'
    updatedAt: 'DateTime'
  }
  portfolio: { // field return type name
    companyName: 'String'
    createdAt: 'DateTime'
    description: 'String'
    employmentType: 'String'
    endMonth: 'String'
    endYear: 'String'
    location: 'String'
    locationType: 'String'
    media: 'media'
    portfolioID: 'ID'
    skills: 'skills'
    startMonth: 'String'
    startYear: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  profile: { // field return type name
    about: 'about'
    avatar: 'media'
    birthday: 'Date'
    createdAt: 'DateTime'
    education: 'education'
    firstname: 'String'
    getMyFont: 'fonts'
    getMyResume: 'resume'
    getMyTheme: 'theme'
    header: 'media'
    lastname: 'String'
    phone: 'PhoneNumber'
    portfolio: 'portfolio'
    profileID: 'ID'
    review: 'review'
    skills: 'skills'
    social: 'social'
    updatedAt: 'DateTime'
    user: 'user'
  }
  project: { // field return type name
    amount: 'Float'
    company: 'company'
    createdAt: 'DateTime'
    description: 'String'
    endDate: 'DateTime'
    projectOrganizerID: 'ID'
    startDate: 'DateTime'
    status: 'String'
    title: 'String'
    updatedAt: 'DateTime'
    user: 'user'
  }
  report: { // field return type name
    createdAt: 'DateTime'
    jobPost: 'jobpost'
    message: 'String'
    reportID: 'ID'
    user: 'user'
  }
  requirement: { // field return type name
    createdAt: 'DateTime'
    requirement: 'String'
    requirementsID: 'ID'
    type: 'String'
    updatedAt: 'DateTime'
  }
  resetPassword: { // field return type name
    createdAt: 'DateTime'
    expiredAt: 'DateTime'
    reset: 'String'
    resetPassID: 'ID'
    updatedAt: 'DateTime'
  }
  resume: { // field return type name
    createdAt: 'DateTime'
    resume: 'String'
    resumeID: 'ID'
    title: 'String'
    updatedaAt: 'DateTime'
  }
  review: { // field return type name
    User: 'user'
    company: 'company'
    createdAt: 'DateTime'
    rating: 'Int'
    review: 'String'
    reviewID: 'ID'
    updatedAt: 'DateTime'
  }
  salary: { // field return type name
    createdAt: 'DateTime'
    currency: 'String'
    fixed: 'Float'
    max: 'Float'
    min: 'Float'
    salaryID: 'ID'
    updatedAt: 'DateTime'
  }
  schedule: { // field return type name
    applicant: 'user'
    createdAt: 'DateTime'
    description: 'String'
    endDate: 'DateTime'
    endTime: 'String'
    link: 'String'
    scheduleID: 'ID'
    startDate: 'DateTime'
    startTime: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  skills: { // field return type name
    createdAt: 'DateTime'
    jobCount: 'Int'
    skills: 'String'
    skillsID: 'ID'
    updatedAt: 'DateTime'
  }
  skillsGroup: { // field return type name
    count: 'Int'
    skills: 'String'
  }
  social: { // field return type name
    Github: 'String'
    Web: 'String'
    X: 'String'
    createdAt: 'DateTime'
    facebook: 'String'
    instagram: 'String'
    socialID: 'ID'
    updatedAt: 'DateTime'
  }
  theme: { // field return type name
    createdAt: 'DateTime'
    image: 'String'
    theme: 'String'
    themeID: 'ID'
    updatedAt: 'DateTime'
  }
  token: { // field return type name
    role: 'String'
    token: 'String'
    user: 'user'
    userID: 'ID'
  }
  user: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    getMyApplication: 'application'
    getMyCompany: 'company'
    getMyLogs: 'activityLogs'
    getMyNotification: 'notification'
    messages: 'message'
    myProfile: 'profile'
    password: 'String'
    passwordHash: 'password'
    plan: 'String'
    projectOrganizer: 'project'
    receiverList: 'message'
    requirement: 'requirement'
    review: 'review'
    role: 'String'
    senderList: 'message'
    updatedAt: 'DateTime'
    userID: 'ID'
    verified: 'Boolean'
  }
  zintegration: { // field return type name
    accountID: 'String'
    clientID: 'String'
    integrationID: 'ID'
    secretID: 'String'
  }
  zoom: { // field return type name
    access_token: 'String'
    api_url: 'String'
    expires_in: 'Int'
    scope: 'String'
    token_type: 'String'
  }
  zoom_meeting: { // field return type name
    created_at: 'String'
    duration: 'Int'
    encrypted_password: 'String'
    h323_password: 'String'
    host_id: 'String'
    id: 'Int'
    join_url: 'String'
    password: 'String'
    pstn_password: 'String'
    start_time: 'String'
    start_url: 'String'
    status: 'String'
    timezone: 'String'
    topic: 'String'
    type: 'String'
    uuid: 'String'
  }
  Error: { // field return type name
    code: 'Int'
    message: 'String'
  }
}

export interface NexusGenArgTypes {
  DashboardObject: {
    jobpostList: { // args
      filter?: string | null; // String
    }
  }
  EmployerDashboard: {
    getMyJobPost: { // args
      filter?: string | null; // String
    }
  }
  Mutation: {
    ChangeEmailAddress: { // args
      email: string; // String!
      userID: string; // ID!
    }
    Logout: { // args
      userID: string; // ID!
    }
    addProfileAvatar: { // args
      file: NexusGenScalars['Upload']; // Upload!
      profileID: string; // ID!
    }
    addProfileHeader: { // args
      file: NexusGenScalars['Upload']; // Upload!
      profileID: string; // ID!
    }
    addProfileThemnFonts: { // args
      fontID: string; // ID!
      profileID: string; // ID!
      themeID: string; // ID!
    }
    addSkillToProfile: { // args
      profileID: string; // ID!
      skills?: Array<string | null> | null; // [String]
    }
    archiveJobPost: { // args
      boolean?: boolean | null; // Boolean
      jobPostID: string; // ID!
    }
    archiveNotification: { // args
      notificationID: string; // ID!
    }
    cancelSubscription: { // args
      userID: string; // ID!
    }
    checkMyEmailAddress: { // args
      email: string; // String!
    }
    companyUploadDocuments: { // args
      companyID: string; // ID!
      file: NexusGenScalars['Upload']; // Upload!
    }
    createAbout: { // args
      input: NexusGenInputs['AboutInput']; // AboutInput!
      profileID: string; // ID!
    }
    createApplication: { // args
      jobPostID: string; // ID!
      resumeID: string; // ID!
      userID: string; // ID!
    }
    createAvatar: { // args
      file: NexusGenScalars['Upload']; // Upload!
      profileID: string; // ID!
    }
    createCompanyReview: { // args
      companyID: string; // ID!
      rating: number; // Float!
      review: string; // String!
    }
    createEducationBackground: { // args
      input: NexusGenInputs['EducationInput']; // EducationInput!
      profileID: string; // ID!
    }
    createFavourite: { // args
      jobPostID: string; // ID!
      userID: string; // ID!
    }
    createFontFamily: { // args
      file: NexusGenScalars['Upload']; // Upload!
      font: string; // String!
      userID: string; // ID!
    }
    createJobPost: { // args
      companyID: string; // ID!
      file?: NexusGenScalars['Upload'] | null; // Upload
      input: NexusGenInputs['jobPostInput']; // jobPostInput!
      salary: NexusGenInputs['salaryInput']; // salaryInput!
      skills: Array<string | null>; // [String]!
    }
    createMessage: { // args
      file?: Array<NexusGenScalars['Upload'] | null> | null; // [Upload]
      message?: string | null; // String
      receiverID: string; // String!
      senderID: string; // String!
    }
    createPortfolio: { // args
      input: NexusGenInputs['PortfolioInput']; // PortfolioInput!
      profileID: string; // ID!
      skills?: Array<string | null> | null; // [String]
    }
    createReportJobPost: { // args
      jobPostID: string; // ID!
      message: string; // String!
      userID: string; // ID!
    }
    createResume: { // args
      file?: NexusGenScalars['Upload'] | null; // Upload
      profileID: string; // ID!
    }
    createSchedule: { // args
      actkn: string; // String!
      applicantID: string; // ID!
      input: NexusGenInputs['ScheduleInput']; // ScheduleInput!
      receiverID: string; // String!
      senderID: string; // String!
    }
    createSkills: { // args
      input: NexusGenInputs['SkillInput']; // SkillInput!
    }
    createSocialLink: { // args
      Github?: string | null; // String
      Web?: string | null; // String
      X?: string | null; // String
      facebook?: string | null; // String
      instagram?: string | null; // String
      profileID: string; // ID!
    }
    createTheme: { // args
      file: NexusGenScalars['Upload']; // Upload!
      theme: string; // String!
      userID: string; // ID!
    }
    createUserAdminAccount: { // args
      input: NexusGenInputs['UserInput']; // UserInput!
    }
    createUserFreelancers: { // args
      fileUpload: NexusGenScalars['Upload']; // Upload!
      input: NexusGenInputs['UserFreelanceInput']; // UserFreelanceInput!
      requirement?: NexusGenInputs['RequirementInput'] | null; // RequirementInput
      skills: Array<string | null>; // [String]!
    }
    createUserRecruiter: { // args
      file: NexusGenScalars['Upload']; // Upload!
      input: NexusGenInputs['UserRecruiterInput']; // UserRecruiterInput!
      subscriptionId?: string | null; // String
    }
    createUserReview: { // args
      companyID: string; // ID!
      rating: number; // Float!
      review: string; // String!
      userID: string; // ID!
    }
    createZoomIntegration: { // args
      accountID: string; // String!
      clientID: string; // String!
      secretID: string; // String!
      userID: string; // ID!
    }
    deactivateMyAccount: { // args
      userID: string; // ID!
    }
    deleteAbout: { // args
      aboutID: string; // ID!
    }
    deleteEducationBackground: { // args
      educationID: string; // ID!
    }
    deleteFavourite: { // args
      favouriteID: string; // ID!
    }
    deleteFontFamily: { // args
      fontID: string; // ID!
      userID: string; // ID!
    }
    deleteJobPost: { // args
      jobPostID: string; // ID!
    }
    deleteMessage: { // args
      messageID: string; // ID!
    }
    deletePortfolio: { // args
      portfolioID: string; // ID!
    }
    deleteProfileAvatar: { // args
      mediaID: string; // ID!
      profileID: string; // ID!
    }
    deleteProfileHeader: { // args
      mediaID: string; // ID!
      profileID: string; // ID!
    }
    deleteResume: { // args
      resumeID: string; // ID!
    }
    deleteSchedule: { // args
      scheduleID: string; // ID!
    }
    deleteSkills: { // args
      skillsID: string; // ID!
    }
    deleteTheme: { // args
      themeID: string; // ID!
    }
    deleteUserAccount: { // args
      userID: string; // ID!
    }
    findMyEmailAddress: { // args
      email: string; // String!
    }
    generateApplicantByJobPostID: { // args
      endDate: string; // String!
      jobPostID: string; // ID!
      startDate: string; // String!
    }
    generateJobPostApplicant: { // args
      jobPostID: string; // ID!
    }
    generateProjectOrganizer: { // args
      endDate?: string | null; // String
      startDate?: string | null; // String
      userID: string; // ID!
    }
    getMyResetPasswordLink: { // args
      reset: string; // String!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    markallNotificationAsRead: { // args
      userID: string; // ID!
    }
    removedSkillToProfile: { // args
      profileID: string; // ID!
      skillsID: string; // ID!
    }
    updateAbout: { // args
      aboutID: string; // ID!
      bio: string; // String!
    }
    updateApplicationStatus: { // args
      applicationID: string; // ID!
      status: string; // String!
    }
    updateCompany: { // args
      companyID: string; // ID!
    }
    updateCompanyLogo: { // args
      companyID: string; // ID!
      file: NexusGenScalars['Upload']; // Upload!
    }
    updateEducationBackground: { // args
      educationID: string; // ID!
      input?: NexusGenInputs['EducationInput'] | null; // EducationInput
    }
    updateFontFamily: { // args
      file?: NexusGenScalars['Upload'] | null; // Upload
      font: string; // String!
      fontID: string; // String!
    }
    updateJobPost: { // args
      input?: NexusGenInputs['jobPostInput'] | null; // jobPostInput
      jobPostID: string; // ID!
      salary?: NexusGenInputs['salaryInput'] | null; // salaryInput
      skills: Array<string | null>; // [String]!
    }
    updateJobSettings: { // args
      applicationStatus?: string | null; // String
      jobPostID: string; // ID!
      status?: string | null; // String
    }
    updateMessageStatus: { // args
      receiverID: string; // ID!
    }
    updateNotification: { // args
      notificationID: string; // ID!
    }
    updatePortfolio: { // args
      input: NexusGenInputs['PortfolioInput']; // PortfolioInput!
      portfolioID: string; // ID!
      skills: Array<string | null>; // [String]!
    }
    updateProfile: { // args
      input: NexusGenInputs['ProfileInput']; // ProfileInput!
      profileID: string; // ID!
    }
    updateProjectDetails: { // args
      amount: number; // Int!
      endDate: NexusGenScalars['Date']; // Date!
      projectOrganizerID: string; // ID!
      startDate: NexusGenScalars['Date']; // Date!
      title: string; // String!
      userID: string; // ID!
    }
    updateProjectStatus: { // args
      projectOrganizerID: string; // ID!
      status: string; // String!
      userID: string; // ID!
    }
    updateSchedule: { // args
      input: NexusGenInputs['ScheduleInput']; // ScheduleInput!
      scheduleID: string; // ID!
    }
    updateSkills: { // args
      input: NexusGenInputs['SkillInput']; // SkillInput!
      skillsID: string; // ID!
    }
    updateSocialLink: { // args
      Github?: string | null; // String
      Web?: string | null; // String
      X?: string | null; // String
      facebook?: string | null; // String
      instagram?: string | null; // String
      socialID: string; // ID!
    }
    updateTheme: { // args
      file?: NexusGenScalars['Upload'] | null; // Upload
      theme: string; // String!
      themeID: string; // ID!
    }
    updateUserPasswordAccount: { // args
      password: string; // String!
      userID: string; // ID!
    }
    updateUserProfile: { // args
      input?: NexusGenInputs['ProfileInput'] | null; // ProfileInput
      userID: string; // ID!
    }
    updateZoomIntegration: { // args
      accountID: string; // String!
      clientID: string; // String!
      integrationID: string; // ID!
      secretID: string; // String!
    }
    upgradeSubscription: { // args
      subscriptionId: string; // String!
      userID: string; // ID!
    }
    verifyMyAccount: { // args
      userID: string; // ID!
    }
    zoom_access: { // args
      userID: string; // ID!
    }
  }
  Query: {
    getAboutById: { // args
      aboutID: string; // ID!
    }
    getAboutByProfileID: { // args
      profileID: string; // ID!
    }
    getAllCompanies: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      search?: string | null; // String
    }
    getAllCompanyReview: { // args
      companyID: string; // ID!
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
    }
    getAllEducationByProfileId: { // args
      profileID: string; // ID!
    }
    getAllFonts: { // args
      pagination: NexusGenInputs['PaginationInput']; // PaginationInput!
      search?: string | null; // String
    }
    getAllJobPost: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
    }
    getAllJobPostReport: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
    }
    getAllMySaveJobs: { // args
      userID: string; // ID!
    }
    getAllMySocialLink: { // args
      profileID: string; // ID!
    }
    getAllResumyByProfileID: { // args
      profileID: string; // ID!
    }
    getAllUserAccountByRole: { // args
      input?: NexusGenInputs['PaginationInput'] | null; // PaginationInput
      role?: string | null; // String
      search?: string | null; // String
    }
    getApplicantJobPostByIdPagination: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      jobPostID: string; // ID!
      search?: string | null; // String
    }
    getApplicationByID: { // args
      applicationID: string; // ID!
    }
    getCompanyByID: { // args
      companyID: string; // ID!
    }
    getCompanyProjects: { // args
      companyID: string; // ID!
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      orderBy: string; // String!
      search: string; // String!
    }
    getCompanySlug: { // args
      slug: string; // String!
    }
    getEducationById: { // args
      educationID: string; // ID!
    }
    getEmployerDashboardQuery: { // args
      companyID?: string | null; // ID
    }
    getJobBoard: { // args
      duration?: Array<string | null> | null; // [String]
      experience?: Array<string | null> | null; // [String]
      filter: string; // String!
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      jobType?: Array<string | null> | null; // [String]
      orderBy?: string | null; // String
      search?: string | null; // String
      skills?: Array<string | null> | null; // [String]
    }
    getJobPostById: { // args
      jobPostID: string; // ID!
    }
    getMessages: { // args
      search?: string | null; // String
      userID: string; // ID!
    }
    getMyApplication: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      status: string; // String!
      userID: string; // ID!
    }
    getMyCompanyByUserID: { // args
      userID: string; // ID!
    }
    getMyFavouriteJobPost: { // args
      jobPostID: string; // ID!
      userID: string; // ID!
    }
    getMyZoomIntegration: { // args
      userID: string; // ID!
    }
    getNotificationByID: { // args
      notificationID: string; // ID!
    }
    getNotificationByUserID: { // args
      cursor?: string | null; // String
      limit?: number | null; // Int
      userID: string; // ID!
    }
    getPersonalMessage: { // args
      receiverID: string; // ID!
      senderID: string; // ID!
    }
    getPortfolioByProfileID: { // args
      profileID: string; // ID!
    }
    getProfileByUser: { // args
      userID: string; // ID!
    }
    getProjectOrganizedID: { // args
      projectOrganizerID: string; // ID!
    }
    getReceiverByDate: { // args
      date: string; // String!
      userID: string; // ID!
    }
    getReportById: { // args
      reportID: string; // ID!
    }
    getReviewById: { // args
      reviewID: string; // ID!
    }
    getScheduleByDate: { // args
      date: string; // String!
      userID: string; // ID!
    }
    getScheduleById: { // args
      scheduleID: string; // ID!
    }
    getSimilarJobPost: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      jobPostID: string; // ID!
      skills: Array<string | null>; // [String]!
    }
    getSkillByProfileID: { // args
      profileID: string; // ID!
    }
    getThemes: { // args
      pagination: NexusGenInputs['PaginationInput']; // PaginationInput!
      search?: string | null; // String
    }
    getUnreadCountMessage: { // args
      userID: string; // ID!
    }
    getUserAccountById: { // args
      userID: string; // ID!
    }
    getUserActivityLogs: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      userID: string; // ID!
    }
    getUserProfileById: { // args
      profileID: string; // ID!
    }
    getUserProjectOrganizer: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      status: string; // String!
      userID: string; // ID!
    }
    jobPagination: { // args
      archive?: boolean | null; // Boolean
      pagination?: NexusGenInputs['PaginationInput'] | null; // PaginationInput
      search?: string | null; // String
      userID: string; // ID!
    }
    skillsPagination: { // args
      input: NexusGenInputs['PaginationInput']; // PaginationInput!
      search?: string | null; // String
    }
    unreadNotification: { // args
      userID: string; // ID!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  AboutPayload: "ErrorObject" | "about"
  ApplicationPayload: "ErrorObject" | "application"
  CredentialsPayload: "ErrorObject" | "token"
  EducationPayload: "ErrorObject" | "education"
  EmailPayload: "ErrorObject" | "user"
  FavouritePayload: "ErrorObject" | "favourite"
  JobPostPayload: "ErrorObject" | "jobpost"
  MediaPayload: "ErrorObject" | "media"
  PortfolioPayload: "ErrorObject" | "portfolio"
  ResumePayload: "ErrorObject" | "resume"
  SchedulePayload: "ErrorObject" | "schedule"
  SkillPayload: "ErrorObject" | "skills"
  SocialPayload: "ErrorObject" | "social"
  UserPayload: "ErrorObject" | "user"
  resetPasswordPayload: "ErrorObject" | "resetPassword"
  salaryPayload: "ErrorObject" | "salary"
  Error: "ErrorObject"
}

export interface NexusGenTypeInterfaces {
  ErrorObject: "Error"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    resolveType: false
    isTypeOf: false
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}